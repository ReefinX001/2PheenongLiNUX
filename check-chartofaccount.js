require('dotenv').config();
const mongoose = require('mongoose');
const ChartOfAccount = require('./models/Account/ChartOfAccount');

async function checkChartOfAccount() {
  try {
    // ‡πÉ‡∏ä‡πâ connection string ‡∏à‡∏≤‡∏Å .env (MongoDB Atlas)
    const mongoURI = process.env.MONGO_URI;
    if (!mongoURI) {
      throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö MONGO_URI ‡πÉ‡∏ô environment variables');
    }

    console.log('üîó Connecting to MongoDB Atlas...');
    await mongoose.connect(mongoURI);
    console.log('Connected to MongoDB');

    // ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô ChartOfAccount
    const allAccounts = await ChartOfAccount.find({}).lean();
    console.log('=== ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏±‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ===');
    console.log('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:', allAccounts.length);

    if (allAccounts.length > 0) {
      console.log('\n=== ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å ===');
      allAccounts.slice(0, 10).forEach((acc, index) => {
        console.log(`${index + 1}. ‡∏£‡∏´‡∏±‡∏™: ${acc.code}, ‡∏ä‡∏∑‡πà‡∏≠: ${acc.name}, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${acc.type}`);
      });

      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö payment
      console.log('\n=== ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ===');
      const paymentRelated = allAccounts.filter(acc =>
        acc.name.match(/‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î|cash|bank|‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£|‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å|‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï|credit/i) ||
        acc.code.match(/^1[12]/)
      );

      console.log('‡∏û‡∏ö', paymentRelated.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:');
      paymentRelated.forEach((acc, index) => {
        console.log(`${index + 1}. ‡∏£‡∏´‡∏±‡∏™: ${acc.code}, ‡∏ä‡∏∑‡πà‡∏≠: ${acc.name}, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${acc.type}`);
      });

      // ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      console.log('\n=== ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ===');
      const types = [...new Set(allAccounts.map(acc => acc.type))];
      types.forEach(type => {
        const count = allAccounts.filter(acc => acc.type === type).length;
        console.log(`${type}: ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      });

    } else {
      console.log('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ChartOfAccount');
    }

  } catch (err) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err.message);
  } finally {
    await mongoose.disconnect();
    console.log('\nDisconnected from MongoDB');
  }
}

checkChartOfAccount();