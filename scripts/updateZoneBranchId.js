const mongoose = require('mongoose');
const Zone = require('../models/HR/zoneModel');
const Branch = require('../models/Account/Branch');
require('dotenv').config();

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB (‡πÉ‡∏ä‡πâ connection string ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å)
const mongoURI = process.env.MONGO_URI
  || process.env.MONGODB_URI
  || 'mongodb://127.0.0.1:27017/myAccountingDB';

mongoose.connect(mongoURI, {
  serverSelectionTimeoutMS: 30000,
  connectTimeoutMS: 30000,
  socketTimeoutMS: 30000,
});

async function updateZoneBranchIds() {
  try {
    console.log('üîÑ Starting zone branchId update...');

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• zones ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const zones = await Zone.find({});
    console.log(`üìã Found ${zones.length} zones to update`);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• branches ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const branches = await Branch.find({});
    console.log(`üè¢ Found ${branches.length} branches`);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á mapping ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡πÑ‡∏õ branch ID
    const branchMapping = {
      '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà': '68541687f88094540c0e5af1',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏´‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà': '6854179e50af62804785c702',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏™‡∏ï‡∏π‡∏•': '685418adac950b3b7702249f',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á': '68541899ac950b3b7702249b',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä': '685418c0ac950b3b770224a3',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏™‡∏∏‡πÑ‡∏´‡∏á-‡πÇ‡∏Å‡∏•‡∏Å': '685418e1ac950b3b770224a7',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏™‡∏≤‡∏¢‡∏°‡∏≠': '685418f1ac950b3b770224aa',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡πÇ‡∏Ñ‡∏Å‡πÇ‡∏û‡∏ò‡∏¥‡πå': '68541903ac950b3b770224ae',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏£‡∏∑‡∏≠‡πÄ‡∏™‡∏≤‡∏∞': '68541919ac950b3b770224b8',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏õ‡∏≤‡∏•‡∏±‡∏™': '68541927ac950b3b770224bb',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡πÄ‡∏ö‡∏ï‡∏á': '68541935ac950b3b770224bf',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™': '686c9453ef0d5cb7d1843d51',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏¢‡∏∞‡∏•‡∏≤': '686c97ba3a844b705b50869a',
      '‡∏™‡∏≤‡∏Ç‡∏≤‡∏ö‡∏¥‡πä‡∏Å‡∏ã‡∏µ ‡∏¢‡∏∞‡∏•‡∏≤': '686c97f73a844b705b5086bc'
    };

    let updatedCount = 0;

    for (const zone of zones) {
      console.log(`\nüîç Processing zone: ${zone.name}`);

      // ‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ zone
      let branchName = null;
      let branchId = null;

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠ zone ‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      for (const [name, id] of Object.entries(branchMapping)) {
        if (zone.name.includes(name)) {
          branchName = name;
          branchId = id;
          break;
        }
      }

      if (branchId) {
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï zone ‡πÉ‡∏´‡πâ‡∏°‡∏µ branchId ‡πÅ‡∏•‡∏∞ branchName
        await Zone.findByIdAndUpdate(zone._id, {
          branchId: new mongoose.Types.ObjectId(branchId),
          branchName: branchName
        });

        console.log(`‚úÖ Updated zone "${zone.name}" with branchId: ${branchId} (${branchName})`);
        updatedCount++;
      } else {
        console.log(`‚ö†Ô∏è No matching branch found for zone: ${zone.name}`);
      }
    }

    console.log(`\nüéâ Migration completed! Updated ${updatedCount} out of ${zones.length} zones.`);

  } catch (error) {
    console.error('‚ùå Migration failed:', error);
  } finally {
    mongoose.connection.close();
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£ migration
updateZoneBranchIds();
