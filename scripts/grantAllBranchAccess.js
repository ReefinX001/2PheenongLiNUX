const mongoose = require('mongoose');
const User = require('../models/User/User');
const Branch = require('../models/Account/Branch');

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/pheenong_acc', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

async function grantAllBranchAccess(username) {
  try {
    console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${username}`);

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const user = await User.findOne({ username })
      .populate('role', 'name allowedPages')
      .populate('allowedBranches', 'name branch_code')
      .populate('checkinBranches', 'name branch_code')
      .populate('defaultBranches', 'name branch_code');

    if (!user) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
      return;
    }

    console.log('üë§ ‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:', {
      username: user.username,
      role: user.role?.name,
      allowedBranches: user.allowedBranches?.length || 0,
      checkinBranches: user.checkinBranches?.length || 0,
      defaultBranches: user.defaultBranches?.length || 0
    });

    // ‡∏î‡∏∂‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const allBranches = await Branch.find({});
    console.log(`üè¢ ‡∏û‡∏ö‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${allBranches.length} ‡∏™‡∏≤‡∏Ç‡∏≤`);

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const branchIds = allBranches.map(b => b._id);

    user.allowedBranches = branchIds;
    user.checkinBranches = branchIds;
    user.defaultBranches = [branchIds[0]]; // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô default

    await user.save();

    console.log('‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log('üìã ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏™‡∏≤‡∏Ç‡∏≤:');
    allBranches.forEach((branch, index) => {
      console.log(`  ${index + 1}. ${branch.name} (${branch.branch_code})`);
    });

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    mongoose.connection.close();
  }
}

// ‡∏£‡∏±‡∏ö username ‡∏à‡∏≤‡∏Å command line
const username = process.argv[2];

if (!username) {
  console.log('üìù ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: node scripts/grantAllBranchAccess.js <username>');
  console.log('üìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: node scripts/grantAllBranchAccess.js admin2');
  process.exit(1);
}

grantAllBranchAccess(username);
