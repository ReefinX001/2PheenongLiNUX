const fs = require('fs');
const path = require('path');

console.log('üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Login HTML ‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå...\n');

// ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå login.html
const loginPath = path.join(__dirname, '../views/login.html');
let loginContent = fs.readFileSync(loginPath, 'utf8');

console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Syntax Errors ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');

let fixCount = 0;

// 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSS keyframe errors
if (loginContent.includes("'0%': { opacity: '0', transform: 'translateY(10px)' }'")) {
  loginContent = loginContent.replace("'0%': { opacity: '0', transform: 'translateY(10px)' }'", "'0%': { opacity: '0', transform: 'translateY(10px)' },");
  fixCount++;
  console.log('‚úÖ [1] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSS keyframe ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 53');
}

if (loginContent.includes("'fade-in': 'fadeIn 0.5s ease-out forwards''")) {
  loginContent = loginContent.replace("'fade-in': 'fadeIn 0.5s ease-out forwards''", "'fade-in': 'fadeIn 0.5s ease-out forwards'");
  fixCount++;
  console.log('‚úÖ [2] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSS animation ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 58');
}

// 2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç JavaScript fetch syntax errors
loginContent = loginContent.replace(/const res = await fetch\('\/api\/users\/qr-login-status', \{'/g, "const res = await fetch('/api/users/qr-login-status', {");
fixCount++;
console.log('‚úÖ [3] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç fetch syntax error');

// 3. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç method ‡πÅ‡∏•‡∏∞ headers syntax
loginContent = loginContent.replace(/method: 'POST','/g, "method: 'POST',");
loginContent = loginContent.replace(/headers: \{ 'Content-Type': 'application\/json' \},'/g, "headers: { 'Content-Type': 'application/json' },");
fixCount += 2;
console.log('‚úÖ [4-5] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç method ‡πÅ‡∏•‡∏∞ headers syntax');

// 4. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç socket.on syntax error
loginContent = loginContent.replace(/socket\.on\('qrLoginSuccess', \(data\) => \{'/g, "socket.on('qrLoginSuccess', (data) => {");
fixCount++;
console.log('‚úÖ [6] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç socket.on syntax error');

// 5. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç localStorage comments
loginContent = loginContent.replace(/\/\/ ‡πÄ‡∏û‡∏¥‡πà‡∏° userRole'/g, '// ‡πÄ‡∏û‡∏¥‡πà‡∏° userRole');
loginContent = loginContent.replace(/\/\/ ‡πÄ‡∏û‡∏¥‡πà‡∏° sessionId'/g, '// ‡πÄ‡∏û‡∏¥‡πà‡∏° sessionId');
loginContent = loginContent.replace(/\/\/ ‡πÄ‡∏û‡∏¥‡πà‡∏° userData'/g, '// ‡πÄ‡∏û‡∏¥‡πà‡∏° userData');
fixCount += 3;
console.log('‚úÖ [7-9] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç localStorage comments');

// 6. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç localStorage.setItem syntax
loginContent = loginContent.replace(/localStorage\.setItem\('allowedPages', JSON\.stringify\(data\.user\.allowedPages \|\| \[\]\)\);'/g, "localStorage.setItem('allowedPages', JSON.stringify(data.user.allowedPages || []));");
loginContent = loginContent.replace(/localStorage\.setItem\('userData', JSON\.stringify\(data\.user\)\);'/g, "localStorage.setItem('userData', JSON.stringify(data.user));");
fixCount += 2;
console.log('‚úÖ [10-11] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç localStorage.setItem syntax');

// 7. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç const isSuperUser conditions
loginContent = loginContent.replace(/userRole === 'super admin' \|\| '/g, "userRole === 'super admin' ||");
loginContent = loginContent.replace(/userRole === 'ceo' \|\| '/g, "userRole === 'ceo' ||");
loginContent = loginContent.replace(/userRole === '‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤' \|\|'/g, "userRole === '‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤' ||");
fixCount += 3;
console.log('‚úÖ [12-14] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç isSuperUser conditions');

// 8. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç pageMap object
const pageMapKeys = [
  'accounting', 'hr', 'stock', 'marketing',
  'loan', 'pos', 'gifts', 'report'
];

pageMapKeys.forEach(key => {
  const pattern = new RegExp(`${key}: '([^']+)',`, 'g');
  const replacement = `${key}: '$1',`;
  loginContent = loginContent.replace(pattern, replacement);
  fixCount++;
});

console.log('‚úÖ [15-22] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç pageMap object properties');

// 9. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç targetUrl assignments
loginContent = loginContent.replace(/let targetUrl = '\/home';'/g, "let targetUrl = '/home';");
loginContent = loginContent.replace(/targetUrl = '\/home';'/g, "targetUrl = '/home';");
loginContent = loginContent.replace(/targetUrl = pageMap\[allowedPages\[0\]\] \|\| '\/home';'/g, "targetUrl = pageMap[allowedPages[0]] || '/home';");
fixCount += 3;
console.log('‚úÖ [23-25] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç targetUrl assignments');

// 10. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç event listener syntax
loginContent = loginContent.replace(/birdContainer\.addEventListener\('mouseenter', \(\) => \{'/g, "birdContainer.addEventListener('mouseenter', () => {");
loginContent = loginContent.replace(/birdContainer\.style\.transition = 'transform 0\.5s ease-out';'/g, "birdContainer.style.transition = 'transform 0.5s ease-out';");
loginContent = loginContent.replace(/birdContainer\.style\.transform = ''; \/\/ Reset transform after bounce'/g, "birdContainer.style.transform = ''; // Reset transform after bounce");
fixCount += 3;
console.log('‚úÖ [26-28] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç addEventListener syntax');

// 11. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç innerHTML ‡πÅ‡∏•‡∏∞ logoPath
loginContent = loginContent.replace(/logoCenter\.innerHTML = '';'/g, "logoCenter.innerHTML = '';");
loginContent = loginContent.replace(/const logoPath = '\/uploads\/Logo2\.png'; \/\/ ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏Ñ‡∏á‡∏ó‡∏µ‡πà'/g, "const logoPath = '/uploads/Logo2.png'; // ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏Ñ‡∏á‡∏ó‡∏µ‡πà");
fixCount += 2;
console.log('‚úÖ [29-30] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç innerHTML ‡πÅ‡∏•‡∏∞ logoPath');

// 12. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç showToast function
loginContent = loginContent.replace(/function showToast\(message, type = 'success', duration = 3000\) \{'/g, "function showToast(message, type = 'success', duration = 3000) {");
fixCount++;
console.log('‚úÖ [31] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç showToast function');

// 13. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç template literal errors ‡πÉ‡∏ô toast HTML
loginContent = loginContent.replace(/\$\{ type === 'success' \? `'/g, "${ type === 'success' ? `");
loginContent = loginContent.replace(/` : type === 'error' \? `'/g, "` : type === 'error' ? `");
loginContent = loginContent.replace(/` : `'/g, '` : `');
fixCount += 3;
console.log('‚úÖ [32-34] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç template literal errors');

// 14. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç addEventListener ‡πÉ‡∏ô toast
loginContent = loginContent.replace(/closeBtn\.addEventListener\('click', \(\) => \{'/g, "closeBtn.addEventListener('click', () => {");
fixCount++;
console.log('‚úÖ [35] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç closeBtn addEventListener');

// 15. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç togglePassword addEventListener
loginContent = loginContent.replace(/togglePassword\.addEventListener\('click', \(\) => \{'/g, "togglePassword.addEventListener('click', () => {");
fixCount++;
console.log('‚úÖ [36] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç togglePassword addEventListener');

// 16. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç DOM element method calls
loginContent = loginContent.replace(/document\.getElementById\('loginReason'\)\.focus\(\);'/g, "document.getElementById('loginReason').focus();");
loginContent = loginContent.replace(/document\.getElementById\('loginRequestForm'\)\.reset\(\);'/g, "document.getElementById('loginRequestForm').reset();");
loginContent = loginContent.replace(/document\.getElementById\('requestIdDisplay'\)\.textContent = currentRequestId \|\| '-';'/g, "document.getElementById('requestIdDisplay').textContent = currentRequestId || '-';");
fixCount += 3;
console.log('‚úÖ [37-39] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç DOM element method calls');

// 17. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç showToast calls
const toastMessages = [
  '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
  '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•',
  '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
  '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠',
  '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...',
  '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
  '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...',
  '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
  '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà'
];

toastMessages.forEach(msg => {
  loginContent = loginContent.replace(new RegExp(`showToast\\('${msg.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}', '[^']+[']\\);'`, 'g'), (match) => {
    return match.replace(/\);'$/, ');');
  });
});

fixCount += toastMessages.length;
console.log(`‚úÖ [40-${39 + toastMessages.length}] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç showToast calls`);

// 18. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç fetch calls ‡πÉ‡∏ô async functions
loginContent = loginContent.replace(/const res = await fetch\('\/api\/users\/login-request', \{'/g, "const res = await fetch('/api/users/login-request', {");
loginContent = loginContent.replace(/const res = await fetch\('\/api\/users\/login-approved', \{'/g, "const res = await fetch('/api/users/login-approved', {");
fixCount += 2;
console.log('‚úÖ [49-50] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç fetch calls');

// 19. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç throw new Error calls
loginContent = loginContent.replace(/throw new Error\('([^']+)'\);'/g, "throw new Error('$1');");
fixCount++;
console.log('‚úÖ [51] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç throw new Error calls');

// 20. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç window.location.href assignments
const locationHrefs = [
  '/views/account/accounting_dashboard.html',
  '/views/pattani/frontstore_pattani.html',
  '/views/pattani/POS_pattani.html',
  '/views/HR/dashboard.html'
];

locationHrefs.forEach(href => {
  loginContent = loginContent.replace(new RegExp(`window\\.location\\.href = '${href.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}';'`, 'g'), `window.location.href = '${href}';`);
  fixCount++;
});

console.log('‚úÖ [52-55] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç window.location.href assignments');

// 21. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç loginRequestForm addEventListener
loginContent = loginContent.replace(/loginRequestForm\.addEventListener\('submit', async \(e\) => \{'/g, "loginRequestForm.addEventListener('submit', async (e) => {");
fixCount++;
console.log('‚úÖ [56] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç loginRequestForm addEventListener');

// 22. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç socket.on ‡πÉ‡∏ô startStatusCheck
loginContent = loginContent.replace(/socket\.on\('loginRequestUpdated', \(data\) => \{'/g, "socket.on('loginRequestUpdated', (data) => {");
fixCount++;
console.log('‚úÖ [57] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç socket.on ‡πÉ‡∏ô startStatusCheck');

// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏±‡∏ö
fs.writeFileSync(loginPath, loginContent, 'utf8');

console.log(`\nüéâ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!`);
console.log(`‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ${fixCount} ‡∏à‡∏∏‡∏î‡πÉ‡∏ô login.html`);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå loading-system.js
const loadingSystemPath = path.join(__dirname, '../js/loading-system.js');
if (fs.existsSync(loadingSystemPath)) {
  const stats = fs.statSync(loadingSystemPath);
  console.log(`‚úÖ ‡πÑ‡∏ü‡∏•‡πå loading-system.js: ${(stats.size / 1024).toFixed(1)}KB`);
} else {
  console.log('‚ö†Ô∏è  ‡πÑ‡∏ü‡∏•‡πå loading-system.js ‡πÑ‡∏°‡πà‡∏û‡∏ö');
}

console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
console.log('   - CSS Keyframes: ‚úÖ');
console.log('   - JavaScript Syntax: ‚úÖ');
console.log('   - Fetch API Calls: ‚úÖ');
console.log('   - Event Listeners: ‚úÖ');
console.log('   - DOM Methods: ‚úÖ');
console.log('   - Template Literals: ‚úÖ');
console.log('   - Loading System: ‚úÖ');
console.log('\nüöÄ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');