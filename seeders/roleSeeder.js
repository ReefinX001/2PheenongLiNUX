const mongoose = require('mongoose');
const UserRole = require('../models/User/UserRole');
require('dotenv').config();

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (sync ‡∏Å‡∏±‡∏ö register_user.html)
const defaultRoles = [
  {
    name: 'Admin',
    allowedPages: ['*'],
    description: '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö - ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Audit Log',
    permissions: ['*']
  },
  {
    name: 'CEO',
    allowedPages: ['*'],
    description: '‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î - ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Audit Log',
    permissions: ['*']
  },
  {
    name: 'HR Manager',
    allowedPages: ['hr'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•',
    permissions: ['HR_READ', 'HR_WRITE', 'HR_DELETE', 'EMPLOYEE_MANAGE']
  },
  {
    name: 'HR Staff',
    allowedPages: ['hr'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•',
    permissions: ['HR_READ', 'HR_WRITE']
  },
  {
    name: 'Accounting Manager',
    allowedPages: ['accounting'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
    permissions: ['ACCOUNTING_READ', 'ACCOUNTING_WRITE', 'ACCOUNTING_DELETE', 'FINANCIAL_REPORT']
  },
  {
    name: 'Accounting Staff',
    allowedPages: ['accounting'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
    permissions: ['ACCOUNTING_READ', 'ACCOUNTING_WRITE']
  },
  {
    name: 'Stock Manager',
    allowedPages: ['stock'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
    permissions: ['STOCK_READ', 'STOCK_WRITE', 'STOCK_DELETE', 'INVENTORY_MANAGE']
  },
  {
    name: 'Stock Staff',
    allowedPages: ['stock'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
    permissions: ['STOCK_READ', 'STOCK_WRITE']
  },
  {
    name: 'Marketing Manager',
    allowedPages: ['marketing'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î',
    permissions: ['MARKETING_READ', 'MARKETING_WRITE', 'MARKETING_DELETE', 'CAMPAIGN_MANAGE']
  },
  {
    name: 'Marketing Staff',
    allowedPages: ['marketing'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î',
    permissions: ['MARKETING_READ', 'MARKETING_WRITE']
  },
  {
    name: 'Loan Manager',
    allowedPages: ['loan'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠',
    permissions: ['LOAN_READ', 'LOAN_WRITE', 'LOAN_DELETE', 'CREDIT_MANAGE']
  },
  {
    name: 'Loan Staff',
    allowedPages: ['loan'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠',
    permissions: ['LOAN_READ', 'LOAN_WRITE']
  },
  {
    name: 'POS Manager',
    allowedPages: ['pos'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô',
    permissions: ['POS_READ', 'POS_WRITE', 'POS_DELETE', 'SALES_REPORT']
  },
  {
    name: 'POS Staff',
    allowedPages: ['pos'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô',
    permissions: ['POS_READ', 'POS_WRITE']
  },
  {
    name: 'Gifts Manager',
    allowedPages: ['gifts'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏°',
    permissions: ['GIFTS_READ', 'GIFTS_WRITE', 'GIFTS_DELETE', 'PROMOTION_MANAGE']
  },
  {
    name: 'Gifts Staff',
    allowedPages: ['gifts'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏°',
    permissions: ['GIFTS_READ', 'GIFTS_WRITE']
  },
  {
    name: 'Multi Department',
    allowedPages: ['accounting', 'hr', 'stock'],
    description: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ú‡∏ô‡∏Å (‡∏ö‡∏±‡∏ç‡∏ä‡∏µ, HR, ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)',
    permissions: ['ACCOUNTING_READ', 'HR_READ', 'STOCK_READ', 'ACCOUNTING_WRITE', 'HR_WRITE', 'STOCK_WRITE']
  },
  {
    name: 'Supervisor',
    allowedPages: ['accounting', 'hr', 'stock', 'marketing'],
    description: '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô (‡∏ö‡∏±‡∏ç‡∏ä‡∏µ, HR, ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î)',
    permissions: ['ACCOUNTING_READ', 'HR_READ', 'STOCK_READ', 'MARKETING_READ', 'SUPERVISOR_REPORT']
  },
  {
    name: 'Branch Manager',
    allowedPages: ['pos', 'stock', 'accounting'],
    description: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏Ç‡∏≤ (POS, ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ)',
    permissions: ['POS_READ', 'POS_WRITE', 'STOCK_READ', 'ACCOUNTING_READ', 'BRANCH_REPORT']
  },
  {
    name: 'Guest',
    allowedPages: ['none'],
    description: '‡∏ú‡∏π‡πâ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏° - ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ',
    permissions: []
  }
];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function connectDB() {
  try {
    // ‡πÉ‡∏ä‡πâ connection string ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö server.js
    const mongoURI = process.env.MONGO_URI
      || process.env.MONGODB_URI
      || 'mongodb://127.0.0.1:27017/myAccountingDB';

    await mongoose.connect(mongoURI, {
      serverSelectionTimeoutMS: 30000,
    });
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('üìç Database URI:', mongoURI.replace(/\/\/.*@/, '//***:***@')); // ‡∏ã‡πà‡∏≠‡∏ô password
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
    process.exit(1);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
async function seedRoles() {
  try {
    console.log('üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó...');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingRolesCount = await UserRole.countDocuments({ deleted_at: null });

    if (existingRolesCount > 0) {
      console.log(`‚ö†Ô∏è ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß (${existingRolesCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`);
      console.log('üí° ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ reset ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: npm run seed:roles --force');
      return;
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
    let successCount = 0;
    let errorCount = 0;

    for (const roleData of defaultRoles) {
      try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const existingRole = await UserRole.findOne({
          name: roleData.name,
          deleted_at: null
        });

        if (existingRole) {
          console.log(`‚ö†Ô∏è ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó "${roleData.name}" ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß - ‡∏Ç‡πâ‡∏≤‡∏°`);
          continue;
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏´‡∏°‡πà
        const newRole = new UserRole(roleData);
        await newRole.save();

        console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó "${roleData.name}" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
        successCount++;

      } catch (error) {
        console.error(`‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó "${roleData.name}" ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:`, error.message);
        errorCount++;
      }
    }

    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£ seed:');
    console.log(`‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${successCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    console.log(`‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${errorCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    console.log(`üìã ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${defaultRoles.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);

    if (successCount > 0) {
      console.log('\nüéâ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    throw error;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ seed ‡πÉ‡∏´‡∏°‡πà (force mode)
async function forceResetRoles() {
  try {
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');

    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ (soft delete)
    await UserRole.updateMany(
      { deleted_at: null },
      { deleted_at: new Date() }
    );

    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');

    // seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    await seedRoles();

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ reset ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    throw error;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô‡∏à‡∏≤‡∏Å command line
async function main() {
  try {
    await connectDB();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö argument --force
    const forceMode = process.argv.includes('--force');

    if (forceMode) {
      await forceResetRoles();
    } else {
      await seedRoles();
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
    process.exit(1);
  } finally {
    await mongoose.connection.close();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß');
    process.exit(0);
  }
}

// Export functions for use in other modules
module.exports = {
  seedRoles,
  forceResetRoles,
  defaultRoles
};

// ‡∏£‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  main();
}